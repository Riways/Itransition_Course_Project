<MudPaper Width="100%" Outlined="true" >
    <MudGrid Spacing="0">
        <MudItem Class="pa-4" xs="12" id="reviewHeader">
            <MudGrid>
                <MudItem xs="12" md="10">
                    <MudAvatar Class="d-inline-flex" Variant="Variant.Outlined" Color="@RandomColorPick()">@(@CurrentReview.Author.UserName.First())</MudAvatar>
                    <MudText Class="d-inline-flex mx-2" Typo="Typo.h6" >
                        @CurrentReview.Author.UserName  
                    </MudText >
                    <MudText Class="d-inline-flex" Typo="Typo.body2" >
                            @(CurrentReview.DateOfCreationInUTC.ToString("d/MM/yy HH:m"))
                    </MudText>
                </MudItem>
                <MudItem Class="my-auto" xs="12" md="2">
                    <MudText Class="d-inline-flex" Typo="Typo.body2" >
                        Category: <MudLink Href="/" Typo="Typo.body2"> @CurrentReview.ReviewCategory</MudLink>  
                    </MudText>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="12">
            <MudDivider />
        </MudItem>
        <MudItem Class="pa-4" xs="12">
            <MudText Typo="Typo.h4" >
                @CurrentReview.SubjectOfReview
            </MudText>
        </MudItem>
        @if (CurrentReview.ReviewImage != null)
        {
                <MudItem Class="px-4 " xs="12">
                    <MudImage Src="@CurrentReview.ReviewImage.ImageUrl" Width="100"/>
                </MudItem>
        }
        <MudItem Class="px-4" xs="12" id="reviewBody">
            @((MarkupString)CurrentReview.ReviewBody)
        </MudItem>
        <MudItem xs="12">
            ReadFull button(Only ob main page)
        </MudItem>
        <MudItem Class="px-4 py-2" xs="12">
            <MudChip Size="Size.Small">TAGS</MudChip>
        </MudItem>
        <MudItem xs="12">
            <MudDivider />
        </MudItem>
        <MudItem Class="pa-4 my-auto" xs="12">
            <MudIcon Class="pb-1" Icon="@Icons.Filled.Star" Color="Color.Warning" Size="Size.Medium"/>
            <MudText Class="d-inline" Typo="Typo.body2">
                @(_currenReviewRating == double.MinValue ? "4.5" : _currenReviewRating)
            </MudText>
            <MudIcon Class="ml-4" Icon="@Icons.Filled.Comment" Size="Size.Small" /> 
            <MudLink Href="/" Typo="Typo.body2"> Comments</MudLink>  
        </MudItem>
    </MudGrid>
</MudPaper>
@code {
    [Parameter]
    public ReviewModel CurrentReview { get; set; }
    private double _currenReviewRating = double.MinValue;

    protected override async Task OnParametersSetAsync()
    {
        if (CurrentReview.Grades != null && CurrentReview.Grades.Count > 0)
        {
            int gradesSum = CurrentReview.Grades.Select(g => g.Value).Sum();
            _currenReviewRating = (double)gradesSum / CurrentReview.Grades.Count;
        }
    }

    public Color RandomColorPick()
    {
        return (Color)Random.Shared.Next(0, 11);
    }
}
